;------------------------------------------------
;
; Saved By The Bell
; Atari VCS Game 
; Created by Brinkman, Bo Dr. on 2014-01-10.
;
; Copyright (c) 2014 __MyCompanyName__. All rights reserved.
;
; Use with joystick controllers
;
;------------------------------------------------
        processor         6502
        include         vcs.h
        include         macro.h

;------------------------------------------------
; Constants
;------------------------------------------------
BLACK = $00

PF_REFLECT = %00100001
PF_BALL_SIZE4 = %00100000

BUZZ = 25

;------------------------------------------------
; RAM
;------------------------------------------------
    SEG.U   variables
    ORG     $80
counter			.byte
horiz       	.byte
vert        	.byte
level1pos		.byte
startingx   	.byte
loopscore   	.byte

player1vert		.byte

sprite0vert		.byte
sprite0horiz	.byte

missile0vert	.byte
missile0horiz	.byte

ballvert		.byte
ballhoriz		.byte

lives			.byte

frames			.byte

direction		.byte
bdirection		.byte

gameState		.byte

notecounter		.byte
notecounter2		.byte

ob1vert			.byte
ob2vert			.byte

;------------------------------------------------
; Start of ROM
;------------------------------------------------
        SEG   Bank0
        ORG   $F000               ; 4k ROM start point

Start 
        CLEAN_START                        ; Clear RAM and Registers

        
        lda                #PF_REFLECT
        sta                CTRLPF
		lda					#1
		sta					level1pos
        
		lda				#1
		sta				AUDC0
		sta				gameState
		
		lda				#$00
		sta				AUDV0
		lda				BUZZ
		sta				AUDF0

        lda                #0
        sta                horiz
		sta				   counter
		sta				   direction
		sta				   bdirection
		sta				   notecounter
		sta				   notecounter2
        lda                #50
        sta                startingx
        lda                #160
        sta                vert
		sta				   player1vert
        lda                #$AD
        sta                COLUP1
		
		;setting player0 and missile0 color
		lda				   #$80
		sta				   COLUP0
		
		lda				   #125
		sta				   sprite0vert
		
		lda				   #60
		sta				   ob1vert
		
		lda				   #75
		sta				   missile0vert
		
		lda				   #100
		sta				   ob2vert
		
		
		lda				   #160
		sta				   ballvert
                
        lda                ##%00100000
        sta                NUSIZ1

		lda		#%00010000
		sta		HMM0
		
		lda					#200
		sta					frames

		lda				   #15
		sta				   lives
        
;------------------------------------------------
; Vertical Blank
;------------------------------------------------
MainLoop
        lda                #0
        sta                VBLANK
        VERTICAL_SYNC
				lda			level1pos
				cmp			#1
				bne			.finishLoop
				inc			level1pos
				nop
				nop
				sta			RESM1
				nop
				nop
				nop
				nop
				nop
				nop
				nop
				nop
				sta			RESM0
				sta			RESBL	
				nop
				nop
				nop
				nop
				nop
				nop
				nop
				nop
				nop
				nop
				sta			RESP1	
					
.finishLoop
    lda     #43
    sta     TIM64T

        ;***** Vertical Blank code goes here
		;sta		WSYNC
		lda		gameState
		cmp		#1
		beq		.level1Sound
.level2Sound
		lda		#12
		sta		AUDC0
		lda		notecounter2
		cmp		#131
		beq		.justbeforeVB
		inc		notecounter2
		lda		notecounter2
		cmp		#20
		bmi		.turnOn
		lda		notecounter2
		cmp		#40
		bmi		.turnOff
		lda		notecounter2
		cmp		#60
		bmi		.turnOn
		lda		notecounter2
		cmp		#80
		bmi		.turnOff
		lda		notecounter2
		cmp		#100
		bmi		.turnOn
		lda		notecounter2
		cmp		#130
		bmi		.turnOff
.level1Sound
		lda		notecounter
		cmp		#131
		beq		.justbeforeVB
		inc		notecounter
		lda		notecounter
		cmp		#20
		bmi		.turnOn
		lda		notecounter
		cmp		#40
		bmi		.turnOff
		lda		notecounter
		cmp		#60
		bmi		.turnOn
		lda		notecounter
		cmp		#80
		bmi		.turnOff
		lda		notecounter
		cmp		#100
		bmi		.turnOn
		lda		notecounter
		cmp		#130
		bmi		.turnOff

		
.turnOff
		lda		#$00
		sta		AUDV0
		jmp		.justbeforeVB
.turnOn
		lda		#$FF
		sta		AUDV0

.justbeforeVB
        sta                                        WSYNC
        sta                                        HMOVE
		lda		#0
                
.waitForVBlank
		sta		CXCLR
        lda                INTIM
        bne                .waitForVBlank


;------------------------------------------------
; Kernel
;------------------------------------------------        
DrawScreen

			   lda		gameState
			   cmp		#2
			   beq		.level2
			   lda		gameState
			   cmp		#1
			   beq		.tolevel1
			   cmp		#3
			   beq		.toWin
			   jmp		.endGame
.level2
		       lda                 #$28
		       sta                 COLUBK

		       lda                 #$10
		       sta                 COLUPF

			   ldx					lives
			   ldy					startingx
               lda        		   .zero_left,y
               sta        		   WSYNC
               sta         		   PF1
                
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop


               lda                 .zero_back,x
               sta                 PF1
               sta                 WSYNC
               
               lda                 #4
               sta                 loopscore
			   jmp					.2scoreloop
			
.tolevel1
				jmp		.level1
.toWin
				jmp		.winGame
.2scoreloop
              inx
			  iny
              lda                 .zero_left,y
              sta                 PF1
              
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop

              lda                .zero_back,x
              sta                PF1        
              sta                WSYNC
              lda                .zero_left,y
              sta                PF1

              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              
              lda                .zero_back,x
              sta                PF1        
              sta                WSYNC
		

              dec                loopscore
              bne                .2scoreloop

              lda                #0
              sta                PF1
               
       	   	  sta                WSYNC
              sta                WSYNC

       	 ldx          #0
         ldy          #180
         sta          WSYNC
		
		lda                .playfield0,x
        sta                PF0
        lda                .playfield1,x
        sta                PF1
        lda                .playfield2,x
        sta                PF2
		jmp				   .2playfieldLoopTop
.2playfieldLoopTop			;16 scan lines, no player, 0-15
.2missileLoop01
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .2missileEnable01
        lda                #0
        sta                ENAM1
        jmp                .2playfieldLoopTopEnd
.2missileEnable01
        lda                #2
        sta                ENAM1
.2playfieldLoopTopEnd
		sta				   WSYNC		
		dey
		lda					counter
		inc					counter
		cmp					#15
		bne					.2playfieldLoopTop
		inx
		lda                .playfield0,x
        sta                PF0
        lda                .playfield1,x
        sta                PF1
        lda                .playfield2,x
        sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.2playfieldLoopTopMaze		;18 scan lines, player, 15-32; vert 152-170
.2missileLoop1
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .2missileEnable1
        lda                #0
        sta                ENAM1
        jmp                .2ballLoop
.2missileEnable1
        lda                #2
        sta                ENAM1
.2ballLoop
		tya
        sbc                ballvert
        adc                #7
        bcs                .2ballEnable
        lda                #0
        sta                ENABL
        jmp                .2goal
.2ballEnable
        lda                                   #2
        sta                                   ENABL
.2goal
		tya
        sbc                player1vert
        adc                #11
        bcs                .2goalEnable
        lda                #0
        sta                GRP1
        jmp                .2playfieldLoopTopMazeEnd
.2goalEnable
		lda					#%11110000
		sta					GRP1
		;do this stuff last in each loop
.2playfieldLoopTopMazeEnd
		sta				   WSYNC		
		dey
		lda					counter
		inc					counter
		cmp					#32
		bne					.2playfieldLoopTopMaze
		inx
		lda                .playfield0,x
		sta                PF0
		lda                .playfield1,x
		sta                PF1
		lda                .playfield2,x
		sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.2playfieldLoopMiddleTop		;37 scan lines, player, 1 obs 32-68;  vert 115-152
.2missileLoop2
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .2missileEnable2
        lda                #0
        sta                ENAM1
        jmp                .2playfieldLoopMiddleTopEnd
.2missileEnable2
        lda                #2
        sta                ENAM1		
		

;do this stuff last in each loop
.2playfieldLoopMiddleTopEnd
		sta				   WSYNC
		dey
		lda					counter
		inc					counter
		cmp					#68
		bne					.2playfieldLoopMiddleTop
		inx
		lda                #%11111111
		sta                PF0
		lda                .playfield1,x
		sta                PF1
		lda                .playfield2,x
		sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.2playfieldLoopMiddle		;38 scan Lines, player, 1 obs	68-105; vert 77-115
.2missileLoop3
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .2missileEnable3
        lda                #0
        sta                ENAM1
        jmp                .2missile0Loop
.2missileEnable3
        lda                #2
        sta                ENAM1		
.2missile0Loop
		tya
        sbc                ob2vert
        adc                #7
        bcs                .2missile0Enable
        lda                #0
        sta                ENAM0
        jmp                .2playfieldLoopMiddleEnd
.2missile0Enable
		        lda                                   #2
		        sta                                   ENAM0
		;do this stuff last in each loop
.2playfieldLoopMiddleEnd
		sta				   WSYNC
		dey
		lda					counter
		inc					counter
		cmp					#105
		bne					.2playfieldLoopMiddle
		inx
		lda                .playfield1,x
		sta                PF1
		lda                .playfield2,x
		sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.2playfieldLoopMiddleBottom	;37 scan lines, player, one obs. 105-141; vert 40-77
.2missileLoop4
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .2missileEnable4
        lda                #0
        sta                ENAM1
        jmp                .2sprite0loop
.2missileEnable4
        lda                #2
        sta                ENAM1		
		;do this stuff last in each loop
		;missile 0
.2sprite0loop
        tya
        sbc                ob1vert
        adc                #5
        bcs                 .2sprite0Enable
		lda					#%00100010
		sta					NUSIZ0
        lda                 #0
		sta					GRP0
        jmp                 .2playfieldLoopMiddleBottomEnd
.2sprite0Enable
		lda					#%00101110
		sta					NUSIZ0
        lda                 #%11110000
        sta                 GRP0
.2playfieldLoopMiddleBottomEnd
		sta				   WSYNC
		dey
		lda					counter
		inc					counter
		cmp					#141
		bne					.2playfieldLoopMiddleBottom
		inx
		lda                .playfield1,x
		sta                PF1
		lda                .playfield2,x
		sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.2playfieldLoopBottomMaze	;14 scan lines, player	141-154; vert 26-40
.2missileLoop5
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .2missileEnable5
        lda                #0
        sta                ENAM1
        jmp                .2playfieldLoopBottomMazeEnd
.2missileEnable5
        lda                #2
        sta                ENAM1		
		;do this stuff last in each loop
.2playfieldLoopBottomMazeEnd
		sta				   WSYNC
		dey
		lda					counter
		inc					counter
		cmp					#154
		bne					.2playfieldLoopBottomMaze
		inx
		lda                .playfield1,x
		sta                PF1
		lda                .playfield2,x
		sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.2playfieldLoopBottom		;20 scan lines, no player 154-173
		;do this stuff last in each loop
		sta				   WSYNC
		dey
		lda					counter
		inc					counter
		cmp					#173
		bne					.2playfieldLoopBottom
		sta				   WSYNC
		sta				   WSYNC
		sta				   WSYNC
		sta				   WSYNC
		sta				   WSYNC
		sta					WSYNC
		jmp				   .ballLoop
.level1
		       lda                 #$04
		       sta                 COLUBK

		       lda                 #$C3
		       sta                 COLUPF
				
			
			   	ldx					lives
				ldy					startingx
               lda        		   .zero_left,y
               sta        		   WSYNC
               sta         		   PF1
                
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop
               nop


               lda                 .zero_back,x
               sta                 PF1
               sta                 WSYNC
               
               lda                 #4
               sta                 loopscore
.scoreloop
              inx
			  iny
              lda                 .zero_left,y
              sta                 PF1
              
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop

              lda                .zero_back,x
              sta                PF1        
              sta                WSYNC
              lda                .zero_left,y
              sta                PF1

              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              nop
              
              lda                .zero_back,x
              sta                PF1        
              sta                WSYNC
		

              dec                loopscore
              bne                .scoreloop

              lda                #0
              sta                PF1
               
       	   	  sta                WSYNC
              sta                WSYNC

       	      ldx          #0
              ldy          #180
              sta          WSYNC
		
		lda                .playfield0,x
        sta                PF0
        lda                .playfield1,x
        sta                PF1
        lda                .playfield2,x
        sta                PF2

.playfieldLoopTop			;16 scan lines, no player, 0-15
.missileLoop01
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .missileEnable01
        lda                #0
        sta                ENAM1
        jmp                .playfieldLoopTopEnd
.missileEnable01
        lda                #2
        sta                ENAM1
.playfieldLoopTopEnd
		sta				   WSYNC		
		dey
		lda					counter
		inc					counter
		cmp					#15
		bne					.playfieldLoopTop
		inx
		lda                .playfield0,x
        sta                PF0
        lda                .playfield1,x
        sta                PF1
        lda                .playfield2,x
        sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.playfieldLoopTopMaze		;18 scan lines, player, 15-32; vert 152-170
.missileLoop1
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .missileEnable1
        lda                #0
        sta                ENAM1
        jmp                .goal
.missileEnable1
        lda                #2
        sta                ENAM1
.goal
		tya
        sbc                player1vert
        adc                #11
        bcs                .goalEnable
        lda                #0
        sta                GRP1
        jmp                .playfieldLoopTopMazeEnd
.goalEnable
		lda					#%11110000
		sta					GRP1
		;do this stuff last in each loop
.playfieldLoopTopMazeEnd
		sta				   WSYNC		
		dey
		lda					counter
		inc					counter
		cmp					#32
		bne					.playfieldLoopTopMaze
		inx
		lda                .playfield0,x
		sta                PF0
		lda                .playfield1,x
		sta                PF1
		lda                .playfield2,x
		sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.playfieldLoopMiddleTop		;37 scan lines, player, 1 obs 32-68;  vert 115-152
.missileLoop2
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .missileEnable2
        lda                #0
        sta                ENAM1
        jmp                .sprite0Loop
.missileEnable2
        lda                #2
        sta                ENAM1		
		
.sprite0Loop
        tya
        sbc                sprite0vert
        adc                #5
        bcs                                   .sprite0Enable
		lda					#%00100010
		sta					NUSIZ0
        lda                                   #0
		sta									  GRP0
        jmp                                   .playfieldLoopMiddleTopEnd
.sprite0Enable
		lda					#%00100010
		sta					NUSIZ0
        lda                                   #%11110000
        sta                                   GRP0
;do this stuff last in each loop
.playfieldLoopMiddleTopEnd
		sta				   WSYNC
		dey
		lda					counter
		inc					counter
		cmp					#68
		bne					.playfieldLoopMiddleTop
		inx
		lda                #%11111111
		sta                PF0
		lda                .playfield1,x
		sta                PF1
		lda                .playfield2,x
		sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.playfieldLoopMiddle		;38 scan Lines, player, 1 obs	68-105; vert 77-115
.missileLoop3
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .missileEnable3
        lda                #0
        sta                ENAM1
        jmp                .playfieldLoopMiddleEnd
.missileEnable3
        lda                #2
        sta                ENAM1		
	
		;do this stuff last in each loop
.playfieldLoopMiddleEnd
		sta				   WSYNC
		dey
		lda					counter
		inc					counter
		cmp					#105
		bne					.playfieldLoopMiddle
		inx
		lda                .playfield1,x
		sta                PF1
		lda                .playfield2,x
		sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.playfieldLoopMiddleBottom	;37 scan lines, player, one obs. 105-141; vert 40-77
.missileLoop4
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .missileEnable4
        lda                #0
        sta                ENAM1
        jmp                .missile0Loop
.missileEnable4
        lda                #2
        sta                ENAM1		
		;do this stuff last in each loop
		;missile 0
.missile0Loop
        tya
        sbc                missile0vert
        adc                #7
        bcs                .missile0Enable
        lda                #0
        sta                ENAM0
        jmp                .playfieldLoopMiddleBottomEnd
.missile0Enable
        lda                                   #2
        sta                                   ENAM0
.playfieldLoopMiddleBottomEnd
		sta				   WSYNC
		dey
		lda					counter
		inc					counter
		cmp					#141
		bne					.playfieldLoopMiddleBottom
		inx
		lda                .playfield1,x
		sta                PF1
		lda                .playfield2,x
		sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.playfieldLoopBottomMaze	;14 scan lines, player	141-154; vert 26-40
.missileLoop5
               ;check missile1
        tya
        sbc                vert
        adc                #5
        bcs                .missileEnable5
        lda                #0
        sta                ENAM1
        jmp                .playfieldLoopBottomMazeEnd
.missileEnable5
        lda                #2
        sta                ENAM1		
		;do this stuff last in each loop
.playfieldLoopBottomMazeEnd
		sta				   WSYNC
		dey
		lda					counter
		inc					counter
		cmp					#154
		bne					.playfieldLoopBottomMaze
		inx
		lda                .playfield1,x
		sta                PF1
		lda                .playfield2,x
		sta                PF2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.playfieldLoopBottom		;20 scan lines, no player 154-173
		;do this stuff last in each loop
		sta				   WSYNC
		dey
		lda					counter
		inc					counter
		cmp					#173
		bne					.playfieldLoopBottom
		sta				   WSYNC
		sta				   WSYNC
		sta				   WSYNC
		sta				   WSYNC
		sta				   WSYNC
		jmp				   .ballLoop
.winGame
		lda		#%00000000
		sta		CTRLPF
		lda		#0
		sta		COLUBK
		
		lda		#$C4
		sta		COLUPF
		
		sta		WSYNC
		
		ldx	#0
		lda	.wi,x
		sta	PF1
		lda	.n,x
		sta	PF2
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.wi,x
		sta	PF1
		lda	.n,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.wi,x
		sta	PF1
		lda	.n,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.wi,x
		sta	PF1
		lda	.n,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.wi,x
		sta	PF1
		lda	.n,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		lda	#0
		sta	PF0
		sta	PF1
		sta	PF2
		
		sta WSYNC
		sta WSYNC
		sta WSYNC
		
		ldy #6
.winLoop		
			ldx	#0
			lda	.wi,x
			sta	PF1
			lda	.n,x
			sta	PF2
			sta	WSYNC
			sta	WSYNC
			sta	WSYNC
			sta	WSYNC

			inx
			lda	.wi,x
			sta	PF1
			lda	.n,x
			sta	PF2

			sta	WSYNC
			sta	WSYNC
			sta	WSYNC
			sta	WSYNC
			sta	WSYNC

			inx
			lda	.wi,x
			sta	PF1
			lda	.n,x
			sta	PF2

			sta	WSYNC
			sta	WSYNC
			sta	WSYNC
			sta	WSYNC
			sta	WSYNC

			inx
			lda	.wi,x
			sta	PF1
			lda	.n,x
			sta	PF2

			sta	WSYNC
			sta	WSYNC
			sta	WSYNC
			sta	WSYNC
			sta	WSYNC

			inx
			lda	.wi,x
			sta	PF1
			lda	.n,x
			sta	PF2

			sta	WSYNC
			sta	WSYNC
			sta	WSYNC
			sta	WSYNC
			sta	WSYNC

			lda	#0
			sta	PF0
			sta	PF1
			sta	PF2

			sta WSYNC
			sta WSYNC
			sta WSYNC
			
			dey
			bne	.winLoop
		
		jmp	.ballLoop
.endGame
		lda		#%00000000
		sta		CTRLPF
		lda		#0
		sta		COLUBK
		
		lda		#$40
		sta		COLUPF
		
		ldx	#0
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		lda	#0
		sta	PF0
		sta	PF1
		sta	PF2
		
		sta WSYNC
		sta WSYNC
		sta WSYNC
		
		ldx	#0
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		lda	#0
		sta	PF0
		sta	PF1
		sta	PF2
		
		sta WSYNC
		sta WSYNC
		sta WSYNC
		
		ldx	#0
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		lda	#0
		sta	PF0
		sta	PF1
		sta	PF2
		
		sta WSYNC
		sta WSYNC
		sta WSYNC
		
		ldx	#0
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		lda	#0
		sta	PF0
		sta	PF1
		sta	PF2
		
		sta WSYNC
		sta WSYNC
		sta WSYNC
		
		ldx	#0
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		lda	#0
		sta	PF0
		sta	PF1
		sta	PF2
		
		sta WSYNC
		sta WSYNC
		sta WSYNC
		
		ldx	#0
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		lda	#0
		sta	PF0
		sta	PF1
		sta	PF2
		
		sta WSYNC
		sta WSYNC
		sta WSYNC
		
		ldx	#0
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		inx
		lda	.lo,x
		sta	PF1
		lda	.se,x
		sta	PF2

		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC
		sta	WSYNC

		lda	#0
		sta	PF0
		sta	PF1
		sta	PF2
		
		sta WSYNC
		sta WSYNC
		sta WSYNC
		sta WSYNC
		sta WSYNC
		sta WSYNC
		sta WSYNC

		
		
		

;ball
.ballLoop
 ;       tya
  ;      sbc                ballvert
   ;     adc                #5
    ;    bcs                                   .ballEnable
     ;   lda                                   #0
      ;  sta                                   ENABL
       ; jmp                                   .endPlayfieldLoop
.jmpplayfieldLoop
		;jmp					.playfieldLoop
.ballEnable
        ;lda                                   #2
        ;sta                                   ENABL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;------------------------------------------------
; Overscan
;------------------------------------------------
        lda                #%01000010
        sta                VBLANK
        lda                #36
        sta                TIM64T

        ;***** Overscan Code goes here
		lda				   #%00000000
		sta				   PF0
		sta				   PF1
		sta				   PF2
		lda					#0
		sta					counter
		
		
                ;collision detection will happen between Missile0
                ;and other stuff, the player controls
                ;missile0
                ;addresses for collision:
                ;CXM0P                ;missile collides with player0 or1
                ;CXM0FB                ;missile collides with PlayField Or Ball
                ;CXPPMM                ;Players collide or missiles collide
                ;sta        CXCLR clears the collision flags

;check for player collision

.player0movement
		lda		#%11010000
		sta		HMP0
.obstacleCollision
		lda		CXM0FB
		and		#%10000000
		bne		.changeMDirection
		
		lda		CXBLPF
		and		#%10000000
		bne		.changeBallDirection
		
		
		jmp		.playerCollide
.changeMDirection
		lda		direction
		cmp		#1
		bne		.missile0right
		;jmp		.missile0left
.missile0left
		lda		#%00010000
		sta		HMM0	
		lda		#0
		sta		direction
		jmp		.playerCollide
.missile0right
		lda		#%11110000
		sta		HMM0
		lda		#1
		sta		direction
		jmp		.ballLeft
		
.changeBallDirection
		lda		bdirection
		cmp		#1
		bne		.ballRight
		;jmp		.missile0left
.ballLeft
		lda		#%00010000
		sta		HMBL	
		lda		#0
		sta		bdirection
		jmp		.playerCollide
.ballRight
		lda		#%11110000
		sta		HMBL
		lda		#1
		sta		bdirection
		
.playerCollide
		lda		CXM1FB
		and		#%10000000
		bne		.playerDied
		
		lda		CXM1P
		and		#%10000000
		bne		.playerDied
		
		lda		CXM1FB
		and		#%01000000
		bne		.playerDied
		
		lda		CXPPMM
		and		#%01000000
		bne		.playerDied
		
		lda		CXM1P
		and		#%01000000
		bne		.endLevel
		jmp		.playerMovement
		
.playerDied
		lda		#1
		sta		level1pos
		lda		#160
		sta		vert
		dec		lives
		dec		lives
		dec		lives
		dec		lives
		dec		lives
		lda		lives
		cmp		#0
		beq		.gameOver
		jmp		.playerMovement
.endLevel
		nop
		nop
		inc		gameState
		lda		#%00000000
		sta		HMM1
		lda		#1
		sta		level1pos
		lda		#160
		sta		vert
		lda		#50
		sta		startingx
		jmp		.waitForOverscan	
.playerMovement
        lda     		#%00000000
        sta     		HMM1
        lda     		SWCHA
        and             #%10000000
        beq             .right
        lda             SWCHA
        and             #%01000000
        beq             .left
        lda             SWCHA
        and             #%00010000
        beq             .up
        lda             SWCHA
        and             #%00100000
        beq             .down
        jmp             .timer
.right
                lda     #%11110000
                sta     HMM1
                jmp     .moveHoriz
.left
                lda     #%00010000
                sta     HMM1
                jmp     .moveHoriz
.moveHoriz
                jmp     .timer
.up
                inc     vert
                jmp     .timer                        
.down
                dec     vert
				jmp     .timer 


.timer
				lda		frames
				sbc		#1
				sta		frames
				cmp		#0
				beq		.second
				jmp     .waitForOverscan

.second
				dec		startingx
				dec		startingx
				dec		startingx
				dec		startingx
				dec		startingx
				lda		#200
				sta		frames
				lda		startingx
				cmp		#0
				beq		.gameOver
				jmp		.waitForOverscan
.gameOver
		lda		#0
		sta		gameState
                
.waitForOverscan
        lda     INTIM
        bne     .waitForOverscan

        jmp                MainLoop

;------------------------------------------------
; ROM Tables
;------------------------------------------------
        ;***** ROM tables go here
.playfield0     ;11110000        playfield 0 only reads these bits marked 1
	;break into segments of 16 for top, 18 for top of maze,112 for middle of maze, 14 for bottom of maze, 20 for bottom
		;202
        ;16
		.byte                %11111111

		;18
        .byte                %00110000
		;148
        .byte                %11111100
		;21
        .byte                %11111111
		.byte                %11111111
		.byte                %11111111
		.byte                %11111111
		.byte                %11111111

.playfield1					;180
		;16
        .byte                %11111111
		;18
        .byte                %00001111

		;37
        .byte                %00001111

		;38
        .byte                %00001111

		;37
        .byte                %00001111
		;14
        .byte                %00000000
		;20
        .byte                %11111111

.playfield2                        ;180
        ;16
		.byte                %11111111
		;18
        .byte                %00000000
		;37
        .byte                %10000000

		;38
        .byte                %10000000

		;37
        .byte                %10000000
		;14
        .byte                %10000000
		;20
		.byte                %11111111
.zero_left
       .byte        %11100000
       .byte        %10100000
       .byte        %10100000
       .byte        %10100000
       .byte        %11100000

.one_left
       .byte   %01000000
       .byte   %11000000
       .byte   %01000000
       .byte   %01000000
       .byte   %11100000
.two_left
       .byte   %11100000
       .byte   %00100000
       .byte   %11100000
       .byte   %10000000
       .byte   %11100000
.three_left
       .byte   %11100000
       .byte   %00100000
       .byte   %11100000
       .byte   %00100000
       .byte   %11100000
.four_left
       .byte   %10100000
       .byte   %10100000
       .byte   %11100000
       .byte   %00100000
       .byte   %00100000
.five_left
       .byte   %11100000
       .byte   %10000000
       .byte   %11100000
       .byte   %00100000
       .byte   %11100000
.six_left
       .byte   %11100000
       .byte   %10000000
       .byte   %11100000
       .byte   %10100000
       .byte   %11100000
.seven_left
       .byte   %11100000
       .byte   %00100000
       .byte   %00100000
       .byte   %00100000
       .byte   %00100000
.eight_left
       .byte   %11100000
       .byte   %10100000
       .byte   %11100000
       .byte   %10100000
       .byte   %11100000
.nine_left
       .byte   %11100000
       .byte   %10100000
       .byte   %11100000
       .byte   %00100000
       .byte   %00100000
.ten_left
       .byte   %01001110
       .byte   %11001010
       .byte   %01001010
       .byte   %01001010
       .byte   %11101110

.zero_back
       .byte   %00000111
       .byte   %00000101
       .byte   %00000101
       .byte   %00000101
       .byte   %00000111

.one_back
       .byte   %00000010
       .byte   %00000011
       .byte   %00000010
       .byte   %00000010
       .byte   %00000111

.two_back
       .byte   %00000111
       .byte   %00000100
       .byte   %00000111
       .byte   %00000001
       .byte   %00000111
.three_back
       .byte   %00000111
       .byte   %00000100
       .byte   %00000111
       .byte   %00000100
       .byte   %00000111
.four_back
       .byte   %00000101
       .byte   %00000101
       .byte   %00000111
       .byte   %00000100
       .byte   %00000100
.five_back
       .byte   %00000111
       .byte   %00000001
       .byte   %00000111
       .byte   %00000100
       .byte   %00000111
.six_back
       .byte   %00000111
       .byte   %00000001
       .byte   %00000111
       .byte   %00000101
       .byte   %00000111
.seven_back
       .byte   %00000111
       .byte   %00000100
       .byte   %00000100
       .byte   %00000100
       .byte   %00000100
.eight_back
       .byte   %00000111
       .byte   %00000101
       .byte   %00000111
       .byte   %00000101
       .byte   %00000111
.nine_back
       .byte   %00000111
       .byte   %00000101
       .byte   %00000111
       .byte   %00000100
       .byte   %00000100
.ten_back
       .byte   %01110010
       .byte   %01010011
       .byte   %01010010
       .byte   %01010010
       .byte   %01110111
.lo
		.byte	%10001110
		.byte	%10001010
		.byte	%10001010
		.byte	%10001010
		.byte	%11101110

.se
		.byte	%01110111
		.byte	%00010001
		.byte	%01110111
		.byte	%00010100
		.byte	%01110111
		
.wi		
		.byte	%10101010
		.byte	%10101010
		.byte	%10101010
		.byte	%10101010
		.byte	%11111010
.n
		.byte	%00001111
		.byte	%00001001
		.byte	%00001001
		.byte	%00001001
		.byte	%00001001
		
		

;------------------------------------------------
; Interrupt Vectors
;------------------------------------------------
        echo [*-$F000]d, " ROM bytes used"
        ORG    $FFFA
        .word  Start         ; NMI
        .word  Start         ; RESET
        .word  Start         ; IRQ
    
        END
